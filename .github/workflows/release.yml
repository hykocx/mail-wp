name: Create Release Zip

on:
  workflow_dispatch:
  release:
    types: [created]
    
permissions:
  contents: write
  packages: read

jobs:
  update-release:
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          


      - name: Add Processing Message to Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.event.release.tag_name }}
          name: ${{ github.event.release.name }}
          body: |
            ðŸ”„ **Files are being generated... Please wait.**
            
            ---
            
            ${{ github.event.release.body }}
          draft: false
          prerelease: ${{ github.event.release.prerelease }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  
  build:
    needs: update-release
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Build project
        run: |
          # Get version from tag
          VERSION=${GITHUB_REF#refs/tags/}
          
          # Clean any existing build directory
          rm -rf build_tmp mail-wp
          
          # Create a temporary directory for the build
          mkdir -p build_tmp/mail-wp
          
          # Copy all relevant files to the mail-wp directory within temp
          rsync -av --progress ./ build_tmp/mail-wp/ --exclude .git --exclude .github --exclude .gitignore --exclude "*.zip" --exclude "*.log" --exclude "node_modules" --exclude ".DS_Store" --exclude build_tmp
          
          # Create the zip file with a single mail-wp directory structure
          cd build_tmp && zip -r ../mail-wp-$VERSION.zip . && cd ..
          
          # Clean up temp directory
          rm -rf build_tmp
      
      - name: Upload Build Artifact
        uses: actions/upload-artifact@v4
        with:
          name: mail-wp-plugin
          path: mail-wp-${{ github.ref_name }}.zip
          retention-days: 1
          
  release:
    needs: build
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
        

      - name: Download build artifact
        uses: actions/download-artifact@v4
        with:
          name: mail-wp-plugin
          path: release-files
          
      - name: List release files
        run: ls -la release-files/
          
      - name: Get current release body
        id: get_release
        run: |
          RELEASE_BODY=$(curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            "https://api.github.com/repos/${{ github.repository }}/releases/tags/${{ github.event.release.tag_name }}" \
            | jq -r '.body')
          
          # Remove the processing message and separator
          UPDATED_BODY=$(echo "$RELEASE_BODY" | sed '/ðŸ”„ \*\*Files are being generated\.\.\. Please wait\.\*\*/,/---/d' | sed '/^$/d')
          
          echo "UPDATED_BODY<<EOF" >> $GITHUB_OUTPUT
          echo "$UPDATED_BODY" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Update Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.event.release.tag_name }}
          name: ${{ github.event.release.name }}
          body: ${{ steps.get_release.outputs.UPDATED_BODY }}
          files: release-files/*
          draft: false
          prerelease: ${{ github.event.release.prerelease }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 